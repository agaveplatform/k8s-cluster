# This role applies to any Agave server. Creates base accounts, sets up ssh keys, etc.
# Should be run whenver running a deployment or adding a new host.
---

- name: Detect /etc/sudoers
  stat: path=/etc/sudoers
  register: etc_sudoers

- name: Disable sudo requiretty for Ansible pipelining
  lineinfile: dest=/etc/sudoers regexp="^Defaults(\s+)(.*)requiretty(.*)" line="#Defaults\1\2requiretty\3" backrefs=yes
  become: yes
  when: etc_sudoers.stat.exists
  ignore_errors: True

- name: "Remove {{ agave_linux_user_name }} user dir"
  shell: rm -rf /home/{{ agave_linux_user_name }}
  become: yes
  when: clean_host
  ignore_errors: True

- name: Remove ansible temp dir
  shell: rm -rf /root/.ansible/tmp
  become: yes
  when: clean_host
  ignore_errors: True

- name: Remove containers
  shell: "docker ps -aq | xargs --no-run-if-empty docker rm -f"
  become: yes
  when: clean_host
  ignore_errors: True

- name: Add agave services user
  user: name={{ agave_linux_user_name }} generate_ssh_key=yes state=present
  become: yes

- name: Add vagrant user to sudoers with no password
  lineinfile:
    dest: /etc/sudoers.d/99-vagrant-user
    line: 'vagrant ALL=(ALL) NOPASSWD:ALL'
    state: present
    create: yes
  become: yes
  when: ansible_ssh_user == "vagrant"

- name: "Add user {{ agave_linux_user_name }} to sudoers with no password"
  lineinfile:
    dest: "/etc/sudoers.d/99-{{ agave_linux_user_name }}-user"
    line: '{{ agave_linux_user_name }} ALL=(ALL) NOPASSWD:ALL'
    state: present
    create: yes
  become: yes

- name: "Add {{ agave_linux_user_name }} key to authorized keys"
  shell: cat id_rsa.pub > authorized_keys chdir=/home/{{ agave_linux_user_name }}/.ssh creates=/home/{{ agave_linux_user_name }}/.ssh/authorized_keys
  become: yes
  become_user: "{{ agave_linux_user_name }}"

- name: "Ensure permissions on {{ agave_linux_user_name }} sudoers"
  file: path=/etc/sudoers.d/99-{{ agave_linux_user_name }}-user mode=0440 owner=root
  become: yes

- name: Ensure .bashrc file is present
  shell: cp -n /etc/skel/{{item}} /home/{{ agave_linux_user_name }}/{{item}}
  become: yes
  become_user: "{{ agave_linux_user_name }}"
  when: clean_host
  with_items:
    - ".bashrc"
    - ".bash_logout"
    - ".bash_profile"

- name: Remove lines expanding aliases on remote commands from .bashrc
  lineinfile:
    dest: "/home/{{ agave_linux_user_name }}/.bashrc"
    line: "^shopt -s expand_aliases"
    state: absent
  become: yes
  become_user: "{{ agave_linux_user_name }}"

- name: Add shopt -s expand_aliases to .bashrc file to expand aliases on remote commands
  lineinfile:
    dest: "/home/{{ agave_linux_user_name }}/.bashrc"
    line: "shopt -s expand_aliases"
    state: present
  become: yes
  become_user: "{{ agave_linux_user_name }}"

- name: Create .bashrc.d directory to hold custom scripts to source on login
  file:
    path: "/home/{{ agave_linux_user_name }}/.bashrc.d"
    state: directory
  become: yes
  become_user: "{{ agave_linux_user_name }}"

- name: Remove sourcing of .bashrc.d folder contents from .bashrc file
  lineinfile:
    dest: "/home/{{ agave_linux_user_name }}/.bashrc"
    regexp: '^if \[\[ -e \$HOME/\.bashrc\.d \]\]'
    state: absent
  become: yes

- name: Add sourcing of .bashrc.d folder contents at login to .bashrc file
  lineinfile:
    dest: "/home/{{ agave_linux_user_name }}/.bashrc"
    line: "if [[ -e $HOME/.bashrc.d ]] && [[ -d $HOME/.bashrc.d ]]; then for i in $(ls $HOME/.bashrc.d); do source $HOME/.bashrc.d/$i ; done fi"
    state: present
  become: yes
  become_user: "{{ agave_linux_user_name }}"

- name: Disabling known http proxy config file settings on host
  include_tasks: disable_http_proxies.yml
  when: disable_http_proxies|bool

- name: "Give other users access to {{ agave_linux_user_name }} home directory"
  file:
    path: "/home/{{ agave_linux_user_name }}"
    mode: 0750
  become: yes

