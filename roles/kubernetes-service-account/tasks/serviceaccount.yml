---
# Creates a service account for the user with access to their own private scope
- name: "Create {{ kubernetes_service_account_namespace }} namespace"
  community.kubernetes.k8s:
    state: present
    definition: "{{ lookup('template', 'namespace.yml.j2') }}"

- name: "Create {{ kubernetes_service_account_namespace }} service account namespace"
  community.kubernetes.k8s:
    state: present
    definition: "{{ lookup('template', 'namespace.yml.j2') }}"

- name: "Create {{ kubernetes_service_account_namespace }} service account"
  community.kubernetes.k8s:
    state: present
    definition: "{{ lookup('template', 'serviceaccount.yml.j2') }}"

- name: "Grant service account admin privileges for the {{ kubernetes_service_account_namespace }} namespace"
  community.kubernetes.k8s:
    state: present
    definition: "{{ lookup('template', 'namespace-admin-crb.yml.j2') }}"

- name: "Grant default namespace account psp role binding for the given namespace"
  community.kubernetes.k8s:
    state: present
    definition: "{{ lookup('template', 'default-serviceaccount-psp-rolebinding.yml.j2') }}"

- name: Get service account secret name
  shell: kubectl get sa {{ kubernetes_service_account_namespace }} -n {{ kubernetes_service_account_namespace }} -o json | jq -r '.secrets[0].name'
  register: kube_sa_secret_name

- name: Get the service account secret data
  shell: kubectl get secret {{ kube_sa_secret_name.stdout }} -n {{ kubernetes_service_account_namespace }} -o json | jq -r '.data'
  register: kube_sa_secret_data

- set_fact:
    kube_sa_secret: "{{ kube_sa_secret_data.stdout | from_json }}"

- set_fact:
    kube_sa_token: "{{ kube_sa_secret['token'] | b64decode }}"
    kube_sa_ca_cert: "{{ kube_sa_secret['ca.crt'] | b64decode }}"

- debug:
    msg: "{{ lookup('template', 'serviceaccount-kubeconfig.yml.j2') }}"



